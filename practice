def go_to_down(rectangles, topToY):
    for i in range(len(rectangles)):
        max_top = 0
        for j in range(rectangles[i][0], rectangles[i][2]):
            max_top = max(topToY[j], max_top)
        
        ans = rectangles[i][1] - max_top
        
        rectangles[i] = [rectangles[i][0], rectangles[i][1] - ans, rectangles[i][2], rectangles[i][3] - ans]
        
        for j in range(rectangles[i][0], rectangles[i][2]):
            topToY[j] = rectangles[i][3]
    
    return rectangles

def go_to_left(rectangle, topToX):
    return

def solution(rectangles):
    topToY = {}
    
    max_i = 0
    for i in rectangles:
        max_i = max(max_i, i[2])
    
    for i in range(max_i+1):
        topToY[i] = 0
        
    
    rectangles = go_to_down(rectangles, topToY)
    
    for i in rectangles:
        print(i)
        
    # 왼쪽이동
    max_Y = 0
    for i in rectangles:
        max_Y = max(max_Y, i[0])
    
    topToX = {}
    for i in range(max_Y+1):
        topToX[i] = 0
    for i in range(len(rectangles)):
        
        max_top = 0
        for j in range(rectangles[i][1], rectangles[i][3]):
            
            max_top = max(topToX[j], max_top)
        
        ans = rectangles[i][0] - max_top
        
        rectangles[i] = [rectangles[i][0]-ans, rectangles[i][1], rectangles[i][2]-ans, rectangles[i][3]]
        
        for j in range(rectangles[i][1], rectangles[i][3]):
            topToX[j] = rectangles[i][2]
            
    
    return


solution([[0, 2, 1, 3], [1, 2, 2, 5], [3, 3, 4, 4], [4, 1, 6, 3], [1, 6, 5, 7], [5, 5, 7, 6], [5, 8, 6, 10]])